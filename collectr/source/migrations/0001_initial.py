# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-07 00:18
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regexp', models.CharField(max_length=64)),
                ('field', models.CharField(choices=[(b'tags', b'tags'), (b'link', b'link'), (b'summary', b'summary'), (b'title', b'title'), (b'content', b'content'), (b'origin', b'origin'), (b'source', b'source'), (b'author', b'author')], max_length=32)),
                ('to_delete', models.BooleanField(default=False)),
                ('xpath', models.TextField(blank=True, null=True)),
                ('to_collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='source.Collection')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HotTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='LinkSum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read', models.BooleanField(default=False)),
                ('recommanded', models.IntegerField(default=1)),
                ('inserted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('hidden', models.BooleanField(default=False)),
                ('authors', models.ManyToManyField(related_name='authors', to='source.Author')),
                ('collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='source.Collection')),
            ],
        ),
        migrations.CreateModel(
            name='Reddit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subreddit', models.CharField(max_length=128)),
                ('uid', models.CharField(blank=True, max_length=128, null=True)),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reddit',
                'verbose_name_plural': 'Reddits',
            },
        ),
        migrations.CreateModel(
            name='Rss',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(max_length=1024, unique=True)),
                ('name', models.CharField(max_length=128)),
                ('etag', models.CharField(blank=True, max_length=128, null=True)),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rss',
                'verbose_name_plural': 'Rss',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('slug', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Url',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.TextField(unique=True)),
                ('title', models.TextField()),
                ('raw_tags', models.TextField()),
                ('summary', models.TextField(null=True)),
                ('html', models.TextField(blank=True, null=True)),
                ('content', models.TextField()),
                ('image', models.TextField(blank=True, null=True)),
                ('inserted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('tags', models.ManyToManyField(to='source.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='UrlViews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Url View',
                'verbose_name_plural': 'Url Views',
            },
        ),
        migrations.AddField(
            model_name='url',
            name='views',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='source.UrlViews'),
        ),
        migrations.AddField(
            model_name='linksum',
            name='sources',
            field=models.ManyToManyField(null=True, to='source.Source'),
        ),
        migrations.AddField(
            model_name='linksum',
            name='tags',
            field=models.ManyToManyField(to='source.Tag'),
        ),
        migrations.AddField(
            model_name='linksum',
            name='url',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='source.Url'),
        ),
        migrations.AddField(
            model_name='linksum',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='hottopic',
            name='sums',
            field=models.ManyToManyField(to='source.LinkSum'),
        ),
        migrations.AddField(
            model_name='hottopic',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='author',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='source.Source'),
        ),
        migrations.AlterUniqueTogether(
            name='linksum',
            unique_together=set([('url', 'user')]),
        ),
    ]
